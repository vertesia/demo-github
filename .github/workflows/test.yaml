name: actions

on: [push]

permissions:
  id-token: write
  contents: read

env:
  VT_ENV: staging
  VT_SITE: staging.cloud.vertesia.io
  VT_ACCOUNT: 652d77895674c387e105948c  # Dengen Labs
  VT_PROJECT: 654df9de09676ad3b8631dc3  # Experiments
  VT_PROFILE: staging-experiments # note: this should match the field ".vertesia.profile" in the agent's "package.json" file.

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: pnpm/action-setup@v4
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: pnpm
    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with:
        token_format: access_token
        project_id: dengenlabs
        service_account: gar-pusher@dengenlabs.iam.gserviceaccount.com
        workload_identity_provider: projects/265888598630/locations/global/workloadIdentityPools/composable-cloud/providers/github
        access_token_lifetime: 300s
        create_credentials_file: true
    - name: Authenticate to Google Artifact Registry
      run: |
        pnpm install --filter "@dglabs/demo-github-root"
        pnpm run registry-login
    - name: Install dependencies
      run: pnpm install
    - name: Run build
      run: pnpm -r build
    - name: Run tests
      run: pnpm -r test

  publish-github-agent:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/docker')
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      id: gauth
      with:
        token_format: access_token
        project_id: dengenlabs
        service_account: gar-pusher@dengenlabs.iam.gserviceaccount.com
        workload_identity_provider: projects/265888598630/locations/global/workloadIdentityPools/composable-cloud/providers/github
        access_token_lifetime: 300s
        create_credentials_file: true

    - name: Get Vertesia API key
      run: |
        export VT_API_KEY="$(gcloud secrets versions access latest --secret=release-notes-api-key)"
        echo "::add-mask::${VT_API_KEY}"
        echo "VT_API_KEY=${VT_API_KEY}" >> $GITHUB_ENV

    - name: Set up Vertesia CLI
      run: |
        npm install -g @vertesia/cli
        bin/init-vertesia-profile.sh
        vertesia profiles

    - name: Connect to Vertesia NPM registry
      run: |
        cd apps/github-agent
        vertesia agent connect

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # list of Docker images to use as base name for tags
        images: |
          us.gcr.io/dengenlabs/agents/vertesia/github-agent
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,format=long,prefix=

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./apps/github-agent/Dockerfile
        push: ${{ github.ref == 'refs/heads/main' }}
        platforms: linux/amd64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
